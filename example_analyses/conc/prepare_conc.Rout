
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(parallelly)
> library(ongoal)
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──
✔ broom        1.0.1      ✔ recipes      1.0.3 
✔ dials        1.1.0      ✔ rsample      1.1.0 
✔ dplyr        1.0.10     ✔ tibble       3.1.8 
✔ ggplot2      3.4.0      ✔ tidyr        1.2.1 
✔ infer        1.0.3      ✔ tune         1.0.1 
✔ modeldata    1.0.1      ✔ workflows    1.1.2 
✔ parsnip      1.0.3      ✔ workflowsets 1.0.0 
✔ purrr        0.3.5      ✔ yardstick    1.1.0 
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
• Use tidymodels_prefer() to resolve common conflicts.
> library(bonsai)
> library(baguette)
> library(rules)

Attaching package: ‘rules’

The following object is masked from ‘package:dials’:

    max_rules

> library(doMC)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> # ------------------------------------------------------------------------------
> 
> tidymodels_prefer()
> theme_set(theme_bw())
> options(pillar.advice = FALSE)
> registerDoMC(cores = parallelly::availableCores())
> 
> fits_dir <- file.path("example_analyses", "conc", "candidate_fits")
> 
> if (!dir.exists(fits_dir)) {
+   dir.create(fits_dir)
+ }
> 
> # ------------------------------------------------------------------------------
> 
> data(concrete) 
> 
> concrete <- 
+   concrete %>% 
+   group_by(cement, blast_furnace_slag, fly_ash, water, superplasticizer, 
+            coarse_aggregate, fine_aggregate, age) 
> 
> averaged <- 
+   concrete %>% 
+   summarize(compressive_strength = mean(compressive_strength), .groups = "drop")
> 
> set.seed(1701)
> conc_split <- initial_split(averaged, strata = compressive_strength)
> train <- training(conc_split)
> test  <- testing(conc_split)
> 
> set.seed(1702) 
> conc_rs <- vfold_cv(train, strata = compressive_strength)
> 
> # ------------------------------------------------------------------------------
> 
> grid_ctrl <-
+   control_grid(
+     parallel_over = "everything",
+     save_pred = TRUE,
+     save_workflow = TRUE
+   )
> 
> # ------------------------------------------------------------------------------
> 
> predictors <- names(train)[names(train) != "compressive_strength"]
> 
> conc_rec <- 
+   recipe(compressive_strength ~ ., data = train) %>% 
+   step_YeoJohnson(all_numeric_predictors()) %>% 
+   step_normalize(all_numeric_predictors())
> 
> conc_quad_rec <- 
+   conc_rec %>% 
+   step_interact(~ all_predictors():all_predictors()) %>% 
+   step_poly(all_of(predictors), degree = 2)
> 
> # ------------------------------------------------------------------------------
> 
> bag_tree_rpart_spec <-
+   bag_tree() %>%
+   set_engine('rpart') %>%
+   set_mode('regression')
> 
> bart_dparts_spec <-
+   parsnip::bart(
+     prior_terminal_node_coef = tune(),
+     prior_terminal_node_expo = tune(),
+     prior_outcome_range = tune(),
+     trees = 500
+   ) %>%
+   set_mode("regression")
> 
> boost_tree_xgboost_spec <-
+   boost_tree(
+     tree_depth = tune(),
+     trees = tune(),
+     learn_rate = tune(),
+     min_n = tune(),
+     loss_reduction = tune(),
+     sample_size = tune(),
+     stop_iter = tune()
+   ) %>% 
+   set_engine('xgboost') %>%
+   set_mode('regression')
> 
> boost_tree_lgb_spec <-
+   boost_tree(
+     tree_depth = tune(),
+     trees = tune(),
+     learn_rate = tune(),
+     min_n = tune(),
+     loss_reduction = tune(),
+     sample_size = tune()
+   ) %>% 
+   set_engine('lightgbm') %>%
+   set_mode('regression')
> 
> cubist_rules_Cubist_spec <-
+   cubist_rules(committees = tune(), neighbors = tune()) %>%
+   set_engine('Cubist')
> 
> decision_tree_rpart_spec <-
+   decision_tree(min_n = tune(), cost_complexity = tune()) %>%
+   set_engine('rpart') %>%
+   set_mode('regression')
> 
> gam_mgcv_spec <- 
+   gen_additive_mod(select_features = tune(), adjust_deg_free = tune()) %>% 
+   set_mode("regression")
> 
> linear_reg_glmnet_spec <-
+   linear_reg(penalty = tune(), mixture = tune()) %>%
+   set_engine('glmnet')
> 
> mars_earth_spec <-
+   mars(prod_degree = tune()) %>%
+   set_engine('earth') %>%
+   set_mode('regression')
> 
> 
> mlp_spec <-
+   mlp(
+     hidden_units = tune(),
+     penalty = tune(),
+     epochs =tune()
+   ) %>%
+   set_engine("nnet", MaxNWts = 2000) %>% 
+   set_mode('regression')
> 
> mlp_param <- 
+   mlp_spec %>% 
+   extract_parameter_set_dials() %>% 
+   update(hidden_units = hidden_units(c(2, 200)))
> 
> nearest_neighbor_kknn_spec <-
+   nearest_neighbor(neighbors = tune(), weight_func = tune(), dist_power = tune()) %>%
+   set_engine('kknn') %>%
+   set_mode('regression')
> 
> rand_forest_ranger_spec <-
+   rand_forest(mtry = tune(), min_n = tune()) %>%
+   set_engine('ranger') %>%
+   set_mode('regression')
> 
> svm_rbf_kernlab_spec <-
+   svm_rbf(cost = tune(), rbf_sigma = tune()) %>%
+   set_engine('kernlab') %>%
+   set_mode('regression')
> 
> # ------------------------------------------------------------------------------
> 
> gam_wflow <- 
+   workflow() %>% 
+   add_model(
+     gam_mgcv_spec,
+     formula = compressive_strength ~ s(cement) + s(blast_furnace_slag) + 
+       s(fly_ash) + s(water) + s(superplasticizer) + s(coarse_aggregate) + 
+       s(fine_aggregate) + s(age)
+   ) %>% 
+   add_recipe(conc_rec)
> 
> # ------------------------------------------------------------------------------
> 
> main_models <- 
+   list(
+     bag_tree = bag_tree_rpart_spec,
+     bart = bart_dparts_spec,
+     xgboost = boost_tree_xgboost_spec,
+     lightgbm = boost_tree_lgb_spec,
+     cubist_rules = cubist_rules_Cubist_spec,
+     decision_tree = decision_tree_rpart_spec,
+     mars = mars_earth_spec,
+     mlp = mlp_spec,
+     nearest_neighbor = nearest_neighbor_kknn_spec,
+     rand_forest = rand_forest_ranger_spec,
+     svm_rbf = svm_rbf_kernlab_spec
+   )
> 
> quad_models <- list(linear_reg = linear_reg_glmnet_spec)
> 
> # ------------------------------------------------------------------------------
> 
> 
> conc_wflow_set <- 
+   workflow_set(
+     preproc = list(plain = conc_rec),
+     models = main_models
+   ) %>% 
+   bind_rows(
+     workflow_set(
+       preproc = list(quadratic = conc_quad_rec),
+       models = quad_models
+     )
+   ) %>% 
+   option_add(id = "plain_mlp", param_info = mlp_param)
> 
> 
> set.seed(1703)
> gam_res <-
+   gam_wflow %>%
+   tune_grid(
+     resamples = conc_rs,
+     grid = 25,
+     control = grid_ctrl
+   )
x Fold02: preprocessor 1/1, model 24/25: Error in magic(G$y, G$X, msp, G$S, G$off, L = G$L, lsp0 = G$lsp0, G$rank...
> 
> conc_res <-
+   conc_wflow_set %>%
+   workflow_map(
+     verbose = FALSE,
+     seed = 1704,
+     grid = 25,
+     resamples = conc_rs,
+     control = grid_ctrl
+   ) %>% 
+   bind_rows(as_workflow_set(plain_gam = gam_res))
i Creating pre-processing data to finalize unknown parameter: mtry
> 
> # ------------------------------------------------------------------------------
> # Save entries in the workflow set separately to reduce the size of the RData file
> 
> for (i in seq_along(conc_res$wflow_id)) {
+   obj_nm <- paste0("conc_", conc_res$wflow_id[i])
+   file_nm <- file.path(fits_dir, paste0(obj_nm, ".RData"))
+   assign(obj_nm, value = conc_res %>% dplyr::slice(i))
+   save(list = obj_nm, file = file_nm, compress = "xz", compression_level = 9)
+ }
> 
> save(
+   train, test,
+   file = file.path("example_analyses", "conc", "conc_data.RData"), 
+   compress = "xz", 
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> sessioninfo::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.0 (2022-04-22)
 os       macOS Big Sur/Monterey 10.16
 system   x86_64, darwin17.0
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       America/New_York
 date     2022-11-22
 pandoc   2.17.1.1 @ /usr/local/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────
 package       * version    date (UTC) lib source
 assertthat      0.2.1      2019-03-21 [1] CRAN (R 4.2.0)
 backports       1.4.1      2021-12-13 [1] CRAN (R 4.2.0)
 baguette      * 1.0.0      2022-06-17 [1] CRAN (R 4.2.0)
 bonsai        * 0.2.0.9000 2022-09-21 [1] Github (tidymodels/bonsai@035a0af)
 broom         * 1.0.1      2022-08-29 [1] CRAN (R 4.2.0)
 C50             0.1.7      2022-11-09 [1] local
 cachem          1.0.6      2021-08-19 [1] CRAN (R 4.2.0)
 class           7.3-20     2022-01-13 [1] CRAN (R 4.2.0)
 cli             3.4.1      2022-09-23 [1] CRAN (R 4.2.0)
 codetools       0.2-18     2020-11-04 [1] CRAN (R 4.2.0)
 colorspace      2.0-3      2022-02-21 [1] CRAN (R 4.2.0)
 conflicted      1.1.0      2021-11-26 [1] CRAN (R 4.2.0)
 Cubist        * 0.4.0      2022-02-05 [1] CRAN (R 4.2.0)
 data.table      1.14.4     2022-10-17 [1] CRAN (R 4.2.0)
 dbarts        * 0.9-22     2022-03-29 [1] CRAN (R 4.2.0)
 DBI             1.1.3      2022-06-18 [1] CRAN (R 4.2.0)
 dials         * 1.1.0      2022-11-04 [1] CRAN (R 4.2.0)
 DiceDesign      1.9        2021-02-13 [1] CRAN (R 4.2.0)
 digest          0.6.30     2022-10-18 [1] CRAN (R 4.2.0)
 doMC          * 1.3.8      2022-02-05 [1] CRAN (R 4.2.0)
 dplyr         * 1.0.10     2022-09-01 [1] CRAN (R 4.2.0)
 earth         * 5.3.1      2021-07-20 [1] CRAN (R 4.2.0)
 ellipsis        0.3.2      2021-04-29 [1] CRAN (R 4.2.0)
 fansi           1.0.3      2022-03-24 [1] CRAN (R 4.2.0)
 fastmap         1.1.0      2021-01-25 [1] CRAN (R 4.2.0)
 foreach       * 1.5.2      2022-02-02 [1] CRAN (R 4.2.0)
 Formula       * 1.2-4      2020-10-16 [1] CRAN (R 4.2.0)
 furrr           0.3.1      2022-08-15 [1] CRAN (R 4.2.0)
 future          1.29.0     2022-11-06 [1] CRAN (R 4.2.0)
 future.apply    1.10.0     2022-11-05 [1] CRAN (R 4.2.0)
 generics        0.1.3      2022-07-05 [1] CRAN (R 4.2.0)
 ggplot2       * 3.4.0      2022-11-04 [1] CRAN (R 4.2.0)
 glmnet        * 4.1-4      2022-04-15 [1] CRAN (R 4.2.0)
 globals         0.16.1     2022-08-28 [1] CRAN (R 4.2.0)
 glue            1.6.2      2022-02-24 [1] CRAN (R 4.2.0)
 gower           1.0.0      2022-02-03 [1] CRAN (R 4.2.0)
 GPfit           1.0-8      2019-02-08 [1] CRAN (R 4.2.0)
 gtable          0.3.1      2022-09-01 [1] CRAN (R 4.2.0)
 hardhat         1.2.0      2022-06-30 [1] CRAN (R 4.2.0)
 igraph          1.3.5      2022-09-22 [1] CRAN (R 4.2.0)
 infer         * 1.0.3      2022-08-22 [1] CRAN (R 4.2.0)
 inum            1.0-4      2021-04-12 [1] CRAN (R 4.2.0)
 ipred           0.9-13     2022-06-02 [1] CRAN (R 4.2.0)
 iterators     * 1.0.14     2022-02-05 [1] CRAN (R 4.2.0)
 jsonlite        1.8.3      2022-10-21 [1] CRAN (R 4.2.0)
 kernlab       * 0.9-31     2022-06-09 [1] CRAN (R 4.2.0)
 kknn          * 1.3.1      2016-03-26 [1] CRAN (R 4.2.0)
 lattice       * 0.20-45    2021-09-22 [1] CRAN (R 4.2.0)
 lava            1.7.0      2022-10-25 [1] CRAN (R 4.2.0)
 lhs             1.1.5      2022-03-22 [1] CRAN (R 4.2.0)
 libcoin         1.0-9      2021-09-27 [1] CRAN (R 4.2.0)
 lifecycle       1.0.3      2022-10-07 [1] CRAN (R 4.2.0)
 lightgbm      * 3.3.3      2022-10-10 [1] CRAN (R 4.2.0)
 listenv         0.8.0      2019-12-05 [1] CRAN (R 4.2.0)
 lubridate       1.9.0      2022-11-06 [1] CRAN (R 4.2.0)
 magrittr        2.0.3      2022-03-30 [1] CRAN (R 4.2.0)
 MASS            7.3-58.1   2022-08-03 [1] CRAN (R 4.2.0)
 Matrix        * 1.5-3      2022-11-11 [1] CRAN (R 4.2.0)
 memoise         2.0.1      2021-11-26 [1] CRAN (R 4.2.0)
 mgcv          * 1.8-41     2022-10-21 [1] CRAN (R 4.2.0)
 modeldata     * 1.0.1      2022-09-06 [1] CRAN (R 4.2.0)
 munsell         0.5.0      2018-06-12 [1] CRAN (R 4.2.0)
 mvtnorm         1.1-3      2021-10-08 [1] CRAN (R 4.2.0)
 nlme          * 3.1-160    2022-10-10 [1] CRAN (R 4.2.0)
 nnet          * 7.3-18     2022-09-28 [1] CRAN (R 4.2.0)
 ongoal        * 0.0.4      2022-11-08 [1] Github (topepo/ongoal@8018a89)
 parallelly    * 1.32.1     2022-07-21 [1] CRAN (R 4.2.0)
 parsnip       * 1.0.3      2022-11-11 [1] CRAN (R 4.2.0)
 partykit        1.2-16     2022-06-20 [1] CRAN (R 4.2.0)
 pillar          1.8.1      2022-08-19 [1] CRAN (R 4.2.0)
 pkgconfig       2.0.3      2019-09-22 [1] CRAN (R 4.2.0)
 plotmo        * 3.6.2      2022-05-21 [1] CRAN (R 4.2.0)
 plotrix       * 3.8-2      2021-09-08 [1] CRAN (R 4.2.0)
 plyr            1.8.7      2022-03-24 [1] CRAN (R 4.2.0)
 prodlim         2019.11.13 2019-11-17 [1] CRAN (R 4.2.0)
 purrr         * 0.3.5      2022-10-06 [1] CRAN (R 4.2.0)
 R6            * 2.5.1      2021-08-19 [1] CRAN (R 4.2.0)
 ranger        * 0.14.1     2022-06-18 [1] CRAN (R 4.2.0)
 Rcpp            1.0.9      2022-07-08 [1] CRAN (R 4.2.0)
 recipes       * 1.0.3      2022-11-09 [1] CRAN (R 4.2.0)
 reshape2        1.4.4      2020-04-09 [1] CRAN (R 4.2.0)
 rlang           1.0.6      2022-09-24 [1] CRAN (R 4.2.0)
 rpart         * 4.1.19     2022-10-21 [1] CRAN (R 4.2.0)
 rsample       * 1.1.0      2022-08-08 [1] CRAN (R 4.2.0)
 rstudioapi      0.14       2022-08-22 [1] CRAN (R 4.2.0)
 rules         * 1.0.0.9000 2022-09-21 [1] Github (tidymodels/rules@48dd5bf)
 scales        * 1.2.1      2022-08-20 [1] CRAN (R 4.2.0)
 sessioninfo     1.2.2.9000 2022-10-11 [1] Github (r-lib/sessioninfo@d70760d)
 shape           1.4.6      2021-05-19 [1] CRAN (R 4.2.0)
 stringi         1.7.8      2022-07-11 [1] CRAN (R 4.2.0)
 stringr         1.4.1      2022-08-20 [1] CRAN (R 4.2.0)
 survival        3.4-0      2022-08-09 [1] CRAN (R 4.2.0)
 TeachingDemos * 2.12       2020-04-07 [1] CRAN (R 4.2.0)
 tibble        * 3.1.8      2022-07-22 [1] CRAN (R 4.2.0)
 tidymodels    * 1.0.0      2022-07-13 [1] CRAN (R 4.2.0)
 tidyr         * 1.2.1      2022-09-08 [1] CRAN (R 4.2.0)
 tidyselect      1.2.0      2022-10-10 [1] CRAN (R 4.2.0)
 timechange      0.1.1      2022-11-04 [1] CRAN (R 4.2.0)
 timeDate        4021.106   2022-09-30 [1] CRAN (R 4.2.0)
 tune          * 1.0.1      2022-10-09 [1] CRAN (R 4.2.0)
 utf8            1.2.2      2021-07-24 [1] CRAN (R 4.2.0)
 vctrs           0.5.1      2022-11-16 [1] CRAN (R 4.2.0)
 withr           2.5.0      2022-03-03 [1] CRAN (R 4.2.0)
 workflows     * 1.1.2      2022-11-16 [1] CRAN (R 4.2.0)
 workflowsets  * 1.0.0      2022-07-12 [1] CRAN (R 4.2.0)
 xgboost       * 1.6.0.1    2022-04-16 [1] CRAN (R 4.2.0)
 yardstick     * 1.1.0      2022-09-07 [1] CRAN (R 4.2.0)

 [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library

──────────────────────────────────────────────────────────────────────────────
> 
> q(save = "no")
> proc.time()
    user   system  elapsed 
6620.346  156.516  452.935 
