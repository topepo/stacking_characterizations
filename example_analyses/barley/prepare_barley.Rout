
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(parallelly)
> library(ongoal)
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──
✔ broom        1.0.1      ✔ recipes      1.0.3 
✔ dials        1.1.0      ✔ rsample      1.1.0 
✔ dplyr        1.0.10     ✔ tibble       3.1.8 
✔ ggplot2      3.4.0      ✔ tidyr        1.2.1 
✔ infer        1.0.3      ✔ tune         1.0.1 
✔ modeldata    1.0.1      ✔ workflows    1.1.2 
✔ parsnip      1.0.3      ✔ workflowsets 1.0.0 
✔ purrr        0.3.5      ✔ yardstick    1.1.0 
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
• Search for functions across packages at https://www.tidymodels.org/find/
> library(bonsai)
> library(rules)

Attaching package: ‘rules’

The following object is masked from ‘package:dials’:

    max_rules

> library(doMC)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> # ------------------------------------------------------------------------------
> 
> tidymodels_prefer()
> theme_set(theme_bw())
> options(pillar.advice = FALSE)
> registerDoMC(cores = parallelly::availableCores())
> 
> # ------------------------------------------------------------------------------
> 
> load(file.path("data", "chimiometrie_2019.RData"))
> 
> chimiometrie_2019 <-
+   chimiometrie_2019  %>%
+   select(-soy_oil, -lucerne)
> 
> set.seed(87)
> barley_split <-
+   initial_split(chimiometrie_2019,
+                 prop = 1 - (500 / nrow(chimiometrie_2019)))
> barley_not_test <- training(barley_split)
> test  <-  testing(barley_split)
> 
> set.seed(2323)
> barley_rs <- validation_split(barley_not_test, prop = 1 - (500 / nrow(barley_not_test)))
> train <- analysis(barley_rs$splits[[1]])
> 
> # ------------------------------------------------------------------------------
> 
> ctrl_grd <-
+   control_grid(
+     parallel_over = "everything",
+     save_pred = TRUE,
+     save_workflow = TRUE
+   )
> 
> # ------------------------------------------------------------------------------
> 
> basic_recipe <- 
+   recipe(barley ~ ., data = train) %>% 
+   step_YeoJohnson(all_numeric_predictors()) %>% 
+   step_normalize(all_predictors())
> 
> pca_recipe <- 
+   recipe(barley ~ ., data = train) %>% 
+   step_YeoJohnson(all_numeric_predictors()) %>% 
+   step_normalize(all_predictors()) %>% 
+   step_pca(all_predictors(), num_comp = tune()) %>% 
+   step_normalize(starts_with("PC"))
> 
> pls_recipe <- 
+   recipe(barley ~ ., data = train) %>% 
+   step_YeoJohnson(all_numeric_predictors()) %>% 
+   step_normalize(all_predictors()) %>% 
+   step_pls(all_predictors(), num_comp = tune(), outcome = vars(barley))
> 
> # ------------------------------------------------------------------------------
> 
> cb_spec <- cubist_rules(committees = tune::tune(), neighbors = tune::tune())
> 
> bart_spec <-
+   bart(
+     trees = tune::tune(),
+     prior_terminal_node_coef = tune::tune(),
+     prior_terminal_node_expo = tune::tune(),
+     prior_outcome_range = tune::tune()
+   ) %>%
+   set_mode('regression')
> 
> mars_spec <-
+   mars(prod_degree = tune::tune()) %>%
+   set_mode('regression')
> 
> nnet_spec <-
+   mlp(hidden_units = tune::tune(),
+       penalty = tune::tune(),
+       epochs = tune()
+   ) %>%
+   set_mode('regression') %>% 
+   set_engine("nnet", MaxNWts = 5000)
> 
> kknn_spec <-
+   nearest_neighbor(
+     neighbors = tune::tune(),
+     weight_func = tune::tune(),
+     dist_power = tune::tune()
+   ) %>%
+   set_mode('regression')
> 
> svm_rbf_spec <-
+   svm_rbf(cost = tune::tune(),
+           rbf_sigma = tune::tune(),
+           margin = tune::tune()) %>%
+   set_mode('regression')
> 
> barley_set <-
+   workflow_set(
+     list(none = basic_recipe, pca = pca_recipe, pls = pls_recipe),
+     list(
+       cubist = cb_spec, knn = kknn_spec, mars = mars_spec,
+       svm = svm_rbf_spec, nnet = nnet_spec, bart = bart_spec
+     )
+   )
> 
> # ------------------------------------------------------------------------------
> # Adjust the ranges of some of the preprocessing tuning parameters
> 
> for (model in grep("(pca)|(pls)", barley_set$wflow_id, value = TRUE)) {
+   prms <-
+     barley_set %>%
+     extract_parameter_set_dials(model) %>%
+     update(num_comp = num_comp(c(1, 50)))
+   
+   barley_set <-
+     barley_set %>%
+     option_add(id = model, param_info = prms)
+ }
> 
> # ------------------------------------------------------------------------------
> 
> barley_res <-
+   barley_set %>%
+   workflow_map(
+     resamples = barley_rs,
+     grid = 25,
+     seed = 4580,
+     control = ctrl_grd,
+     verbose = TRUE
+   )
i  1 of 18 tuning:     none_cubist
ℹ The workflow being saved contains a recipe, which is 25.23 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  1 of 18 tuning:     none_cubist (48m 5s)
i  2 of 18 tuning:     none_knn
ℹ The workflow being saved contains a recipe, which is 25.23 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  2 of 18 tuning:     none_knn (11m 18.8s)
i  3 of 18 tuning:     none_mars
ℹ The workflow being saved contains a recipe, which is 25.23 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  3 of 18 tuning:     none_mars (1m 16.7s)
i  4 of 18 tuning:     none_svm
ℹ The workflow being saved contains a recipe, which is 25.23 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  4 of 18 tuning:     none_svm (3m 12.5s)
i  5 of 18 tuning:     none_nnet
x validation: preprocessor 1/1, model 18/25: Error in nnet.default(x, y, w, ...): too many (5521) weights
ℹ The workflow being saved contains a recipe, which is 25.23 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  5 of 18 tuning:     none_nnet (7m 26.2s)
i  6 of 18 tuning:     none_bart
ℹ The workflow being saved contains a recipe, which is 25.23 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  6 of 18 tuning:     none_bart (1m 17.2s)
i  7 of 18 tuning:     pca_cubist
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  7 of 18 tuning:     pca_cubist (2m 39.4s)
i  8 of 18 tuning:     pca_knn
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  8 of 18 tuning:     pca_knn (1m 37.5s)
i  9 of 18 tuning:     pca_mars
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔  9 of 18 tuning:     pca_mars (40.1s)
i 10 of 18 tuning:     pca_svm
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 10 of 18 tuning:     pca_svm (52.6s)
i 11 of 18 tuning:     pca_nnet
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 11 of 18 tuning:     pca_nnet (57.1s)
i 12 of 18 tuning:     pca_bart
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 12 of 18 tuning:     pca_bart (1m 22.4s)
i 13 of 18 tuning:     pls_cubist
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 13 of 18 tuning:     pls_cubist (2m 19.8s)
i 14 of 18 tuning:     pls_knn
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 14 of 18 tuning:     pls_knn (1m 23.2s)
i 15 of 18 tuning:     pls_mars
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 15 of 18 tuning:     pls_mars (31.9s)
i 16 of 18 tuning:     pls_svm
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 16 of 18 tuning:     pls_svm (37.9s)
i 17 of 18 tuning:     pls_nnet
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 17 of 18 tuning:     pls_nnet (35.5s)
i 18 of 18 tuning:     pls_bart
ℹ The workflow being saved contains a recipe, which is 25.24 Mb in
ℹ memory. If this was not intentional, please set the control setting
ℹ `save_workflow = FALSE`.
✔ 18 of 18 tuning:     pls_bart (1m 4.6s)
> 
> # ------------------------------------------------------------------------------
> # Save entries in the workflow set separately to reduce the size of the RData file
> fits_dir <- file.path("example_analyses", "barley", "candidate_fits")
> 
> if (!dir.exists(fits_dir)) {
+   dir.create(fits_dir)
+ }
> 
> for (i in seq_along(barley_res$wflow_id)) {
+   obj_nm <- paste0("barley_", barley_res$wflow_id[i])
+   file_nm <- file.path(fits_dir, paste0(obj_nm, ".RData"))
+   assign(obj_nm, value = barley_res %>% dplyr::slice(i))
+   save(list = obj_nm, file = file_nm, compress = "xz", compression_level = 9)
+ }
> 
> save(
+   train, test,
+   file = file.path("example_analyses", "barley", "barley_data.RData"), 
+   compress = "xz", 
+   compression_level = 9
+ )
>   
> # ------------------------------------------------------------------------------
> 
> sessioninfo::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.0 (2022-04-22)
 os       macOS Big Sur/Monterey 10.16
 system   x86_64, darwin17.0
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       America/New_York
 date     2022-11-22
 pandoc   2.17.1.1 @ /usr/local/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────
 package       * version    date (UTC) lib source
 assertthat      0.2.1      2019-03-21 [1] CRAN (R 4.2.0)
 backports       1.4.1      2021-12-13 [1] CRAN (R 4.2.0)
 BiocParallel    1.30.4     2022-10-13 [1] Bioconductor
 bonsai        * 0.2.0.9000 2022-09-21 [1] Github (tidymodels/bonsai@035a0af)
 broom         * 1.0.1      2022-08-29 [1] CRAN (R 4.2.0)
 cachem          1.0.6      2021-08-19 [1] CRAN (R 4.2.0)
 class           7.3-20     2022-01-13 [1] CRAN (R 4.2.0)
 cli             3.4.1      2022-09-23 [1] CRAN (R 4.2.0)
 codetools       0.2-18     2020-11-04 [1] CRAN (R 4.2.0)
 colorspace      2.0-3      2022-02-21 [1] CRAN (R 4.2.0)
 conflicted      1.1.0      2021-11-26 [1] CRAN (R 4.2.0)
 corpcor         1.6.10     2021-09-16 [1] CRAN (R 4.2.0)
 Cubist        * 0.4.0      2022-02-05 [1] CRAN (R 4.2.0)
 dbarts        * 0.9-22     2022-03-29 [1] CRAN (R 4.2.0)
 DBI             1.1.3      2022-06-18 [1] CRAN (R 4.2.0)
 dials         * 1.1.0      2022-11-04 [1] CRAN (R 4.2.0)
 DiceDesign      1.9        2021-02-13 [1] CRAN (R 4.2.0)
 digest          0.6.30     2022-10-18 [1] CRAN (R 4.2.0)
 doMC          * 1.3.8      2022-02-05 [1] CRAN (R 4.2.0)
 dplyr         * 1.0.10     2022-09-01 [1] CRAN (R 4.2.0)
 earth         * 5.3.1      2021-07-20 [1] CRAN (R 4.2.0)
 ellipse         0.4.3      2022-05-31 [1] CRAN (R 4.2.0)
 ellipsis        0.3.2      2021-04-29 [1] CRAN (R 4.2.0)
 fansi           1.0.3      2022-03-24 [1] CRAN (R 4.2.0)
 fastmap         1.1.0      2021-01-25 [1] CRAN (R 4.2.0)
 foreach       * 1.5.2      2022-02-02 [1] CRAN (R 4.2.0)
 Formula       * 1.2-4      2020-10-16 [1] CRAN (R 4.2.0)
 furrr           0.3.1      2022-08-15 [1] CRAN (R 4.2.0)
 future          1.29.0     2022-11-06 [1] CRAN (R 4.2.0)
 future.apply    1.10.0     2022-11-05 [1] CRAN (R 4.2.0)
 generics        0.1.3      2022-07-05 [1] CRAN (R 4.2.0)
 ggplot2       * 3.4.0      2022-11-04 [1] CRAN (R 4.2.0)
 ggrepel         0.9.1      2021-01-15 [1] CRAN (R 4.2.0)
 globals         0.16.1     2022-08-28 [1] CRAN (R 4.2.0)
 glue            1.6.2      2022-02-24 [1] CRAN (R 4.2.0)
 gower           1.0.0      2022-02-03 [1] CRAN (R 4.2.0)
 GPfit           1.0-8      2019-02-08 [1] CRAN (R 4.2.0)
 gridExtra       2.3        2017-09-09 [1] CRAN (R 4.2.0)
 gtable          0.3.1      2022-09-01 [1] CRAN (R 4.2.0)
 hardhat         1.2.0      2022-06-30 [1] CRAN (R 4.2.0)
 igraph          1.3.5      2022-09-22 [1] CRAN (R 4.2.0)
 infer         * 1.0.3      2022-08-22 [1] CRAN (R 4.2.0)
 ipred           0.9-13     2022-06-02 [1] CRAN (R 4.2.0)
 iterators     * 1.0.14     2022-02-05 [1] CRAN (R 4.2.0)
 kernlab       * 0.9-31     2022-06-09 [1] CRAN (R 4.2.0)
 kknn          * 1.3.1      2016-03-26 [1] CRAN (R 4.2.0)
 lattice       * 0.20-45    2021-09-22 [1] CRAN (R 4.2.0)
 lava            1.7.0      2022-10-25 [1] CRAN (R 4.2.0)
 lhs             1.1.5      2022-03-22 [1] CRAN (R 4.2.0)
 lifecycle       1.0.3      2022-10-07 [1] CRAN (R 4.2.0)
 listenv         0.8.0      2019-12-05 [1] CRAN (R 4.2.0)
 lubridate       1.9.0      2022-11-06 [1] CRAN (R 4.2.0)
 magrittr        2.0.3      2022-03-30 [1] CRAN (R 4.2.0)
 MASS          * 7.3-58.1   2022-08-03 [1] CRAN (R 4.2.0)
 Matrix          1.5-3      2022-11-11 [1] CRAN (R 4.2.0)
 matrixStats     0.62.0     2022-04-19 [1] CRAN (R 4.2.0)
 memoise         2.0.1      2021-11-26 [1] CRAN (R 4.2.0)
 mixOmics      * 6.20.0     2022-08-16 [1] bioc_git2r (@dd98c6e)
 modeldata     * 1.0.1      2022-09-06 [1] CRAN (R 4.2.0)
 munsell         0.5.0      2018-06-12 [1] CRAN (R 4.2.0)
 nnet          * 7.3-18     2022-09-28 [1] CRAN (R 4.2.0)
 ongoal        * 0.0.4      2022-11-08 [1] Github (topepo/ongoal@8018a89)
 parallelly    * 1.32.1     2022-07-21 [1] CRAN (R 4.2.0)
 parsnip       * 1.0.3      2022-11-11 [1] CRAN (R 4.2.0)
 pillar          1.8.1      2022-08-19 [1] CRAN (R 4.2.0)
 pkgconfig       2.0.3      2019-09-22 [1] CRAN (R 4.2.0)
 plotmo        * 3.6.2      2022-05-21 [1] CRAN (R 4.2.0)
 plotrix       * 3.8-2      2021-09-08 [1] CRAN (R 4.2.0)
 plyr            1.8.7      2022-03-24 [1] CRAN (R 4.2.0)
 prettyunits     1.1.1      2020-01-24 [1] CRAN (R 4.2.0)
 prodlim         2019.11.13 2019-11-17 [1] CRAN (R 4.2.0)
 purrr         * 0.3.5      2022-10-06 [1] CRAN (R 4.2.0)
 R6              2.5.1      2021-08-19 [1] CRAN (R 4.2.0)
 rARPACK         0.11-0     2016-03-10 [1] CRAN (R 4.2.0)
 RColorBrewer    1.1-3      2022-04-03 [1] CRAN (R 4.2.0)
 Rcpp            1.0.9      2022-07-08 [1] CRAN (R 4.2.0)
 recipes       * 1.0.3      2022-11-09 [1] CRAN (R 4.2.0)
 reshape2        1.4.4      2020-04-09 [1] CRAN (R 4.2.0)
 rlang           1.0.6      2022-09-24 [1] CRAN (R 4.2.0)
 rpart           4.1.19     2022-10-21 [1] CRAN (R 4.2.0)
 rsample       * 1.1.0      2022-08-08 [1] CRAN (R 4.2.0)
 RSpectra        0.16-1     2022-04-24 [1] CRAN (R 4.2.0)
 rstudioapi      0.14       2022-08-22 [1] CRAN (R 4.2.0)
 rules         * 1.0.0.9000 2022-09-21 [1] Github (tidymodels/rules@48dd5bf)
 scales        * 1.2.1      2022-08-20 [1] CRAN (R 4.2.0)
 sessioninfo     1.2.2.9000 2022-10-11 [1] Github (r-lib/sessioninfo@d70760d)
 stringi         1.7.8      2022-07-11 [1] CRAN (R 4.2.0)
 stringr         1.4.1      2022-08-20 [1] CRAN (R 4.2.0)
 survival        3.4-0      2022-08-09 [1] CRAN (R 4.2.0)
 TeachingDemos * 2.12       2020-04-07 [1] CRAN (R 4.2.0)
 tibble        * 3.1.8      2022-07-22 [1] CRAN (R 4.2.0)
 tidymodels    * 1.0.0      2022-07-13 [1] CRAN (R 4.2.0)
 tidyr         * 1.2.1      2022-09-08 [1] CRAN (R 4.2.0)
 tidyselect      1.2.0      2022-10-10 [1] CRAN (R 4.2.0)
 timechange      0.1.1      2022-11-04 [1] CRAN (R 4.2.0)
 timeDate        4021.106   2022-09-30 [1] CRAN (R 4.2.0)
 tune          * 1.0.1      2022-10-09 [1] CRAN (R 4.2.0)
 utf8            1.2.2      2021-07-24 [1] CRAN (R 4.2.0)
 vctrs           0.5.1      2022-11-16 [1] CRAN (R 4.2.0)
 withr           2.5.0      2022-03-03 [1] CRAN (R 4.2.0)
 workflows     * 1.1.2      2022-11-16 [1] CRAN (R 4.2.0)
 workflowsets  * 1.0.0      2022-07-12 [1] CRAN (R 4.2.0)
 yardstick     * 1.1.0      2022-09-07 [1] CRAN (R 4.2.0)

 [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library

──────────────────────────────────────────────────────────────────────────────
> 
> q(save = "no")
> proc.time()
     user    system   elapsed 
59452.964  1057.241  6656.879 
