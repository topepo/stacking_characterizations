
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("helpers.R")
> 
> barley_set <- read_as_workflow_set(file.path("example_analyses", "barley", "candidate_fits"))
> 
> load(file.path("example_analyses", "barley", "barley_data.RData"))
> 
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──
✔ broom        1.0.1      ✔ recipes      1.0.3 
✔ dials        1.1.0      ✔ rsample      1.1.0 
✔ dplyr        1.0.10     ✔ tibble       3.1.8 
✔ ggplot2      3.4.0      ✔ tidyr        1.2.1 
✔ infer        1.0.3      ✔ tune         1.0.1 
✔ modeldata    1.0.1      ✔ workflows    1.1.2 
✔ parsnip      1.0.3      ✔ workflowsets 1.0.0 
✔ purrr        0.3.5      ✔ yardstick    1.1.0 
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
• Use suppressPackageStartupMessages() to eliminate package startup messages
> library(bonsai)
> library(rules)

Attaching package: ‘rules’

The following object is masked from ‘package:dials’:

    max_rules

> library(embed)
> library(stacks)
> library(butcher)
> 
> # generate a minimal, unpenalized model stack in order to
> # generate each model specification
> barley_data_stack <- 
+   stacks() %>%
+   add_candidates(barley_set)
Warning messages:
1: The inputted `candidates` argument `none_nnet` generated notes during tuning/resampling. Model stacking may fail due to these issues; see `?collect_notes` if so. 
2: Predictions from 8 candidates were identical to those from existing candidates and were removed from the data stack. 
> 
> set.seed(1)
> barley_model_stack <-
+   barley_data_stack %>%
+   blend_predictions(times = 3, meta_learner = linear_reg()) %>%
+   fit_members()
Warning message:
The `...` are not used in this function but one or more arguments were passed: 'meta_learner' 
> 
> # dbarts::bart doesn't have a butcher method, and this element
> # specifically accounts for most of its (large) object size
> rm_yhat_train <- function(x) {
+   if (inherits(x$fit$fit$fit, "bart")) {
+     x$fit$fit$fit$yhat.train <- NULL
+   }
+   
+   x
+ }
> 
> barley_member_fits <- barley_model_stack$member_fits
> barley_member_fits <- map(barley_member_fits, butcher)
> barley_member_fits <- map(barley_member_fits, rm_yhat_train)
> barley_member_fits_names <- names(barley_member_fits)
> 
> if (!dir.exists(file.path("example_analyses", "barley", "member_fits"))) {
+   dir.create(file.path("example_analyses", "barley", "member_fits"))
+ }
> 
> for (i in seq_along(barley_member_fits)) {
+   obj_nm <- barley_member_fits_names[i]
+   obj <- barley_member_fits[[i]]
+   file_nm <- file.path("example_analyses", "barley", "member_fits", paste0(obj_nm, ".RData"))
+   assign(obj_nm, value = barley_member_fits[[i]])
+   save(list = obj_nm, file = file_nm, compress = "xz", compression_level = 9)
+ }
> 
> proc.time()
   user  system elapsed 
665.310  10.018 675.678 
