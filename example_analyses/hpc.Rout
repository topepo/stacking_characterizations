
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(parallelly)
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──
✔ broom        1.0.0      ✔ recipes      1.0.1 
✔ dials        1.0.0      ✔ rsample      1.1.0 
✔ dplyr        1.0.10     ✔ tibble       3.1.8 
✔ ggplot2      3.3.6      ✔ tidyr        1.2.1 
✔ infer        1.0.2      ✔ tune         1.0.0 
✔ modeldata    1.0.0      ✔ workflows    1.0.0 
✔ parsnip      1.0.1      ✔ workflowsets 1.0.0 
✔ purrr        0.3.4      ✔ yardstick    1.1.0 
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
• Search for functions across packages at https://www.tidymodels.org/find/
> library(baguette)
> library(bonsai)
> library(discrim)

Attaching package: ‘discrim’

The following object is masked from ‘package:dials’:

    smoothness

> library(doMC)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> # ------------------------------------------------------------------------------
> 
> tidymodels_prefer()
> theme_set(theme_bw())
> options(pillar.advice = FALSE)
> registerDoMC(cores = parallelly::availableCores())
> 
> # ------------------------------------------------------------------------------
> 
> data(hpc_data, package = "modeldata")
> 
> set.seed(1373)
> hpc_split <- initial_split(hpc_data, prop = 8 / 10, strata = class)
> hpc_train <- training(hpc_split)
> hpc_test  <- testing(hpc_split)
> 
> set.seed(4497)
> hpc_rs <- vfold_cv(hpc_train, repeats = 2)
> 
> ctrl_grid <- control_grid(save_workflow = TRUE, save_pred = TRUE)
> 
> # ------------------------------------------------------------------------------
> 
> bland_recipe <- recipe(formula = class ~ ., data = hpc_data)
> 
> norm_recipe <-
+   recipe(formula = class ~ ., data = hpc_data) %>%
+   step_log(compounds, input_fields) %>%
+   step_log(num_pending, offset = 1) %>%
+   step_dummy(all_nominal_predictors()) %>%
+   step_zv(all_predictors()) %>%
+   step_normalize(all_numeric_predictors())
> 
> glmnet_recipe <- 
+   recipe(formula = class ~ ., data = hpc_train) %>%
+   step_log(compounds, input_fields) %>% 
+   step_log(num_pending, offset = 1) %>% 
+   step_dummy(all_nominal_predictors()) %>% 
+   step_zv(all_predictors()) %>% 
+   step_normalize(all_numeric_predictors()) %>% 
+   step_ns(compounds, deg_free = tune("compounds")) %>% 
+   step_ns(input_fields, deg_free = tune("inputs")) 
> 
> # ------------------------------------------------------------------------------
> 
> glmnet_spec <- 
+   multinom_reg(penalty = tune(), mixture = tune()) %>% 
+   set_mode("classification") %>% 
+   set_engine("glmnet") 
> 
> glmnet_workflow <- 
+   workflow() %>% 
+   add_recipe(glmnet_recipe) %>% 
+   add_model(glmnet_spec) 
> 
> glmnet_param <- 
+   glmnet_workflow %>% 
+   extract_parameter_set_dials() %>% 
+   update(
+     compounds    = spline_degree(c(2L, 50L)),
+     inputs = spline_degree(c(2L, 50L))
+   )
> 
> set.seed(23892)
> glmnet_grid <- 
+   glmnet_param %>% 
+   grid_max_entropy(size = 25)
> 
> set.seed(9624)
> glmnet_res <-
+   tune_grid(
+     glmnet_workflow,
+     resamples = hpc_rs,
+     grid = glmnet_grid,
+     param_info = glmnet_param,
+     control = ctrl_grid
+   ) 
> 
> save(
+   glmnet_res,
+   file = file.path("example_analyses", "hpc_glmnet.RData"),
+   compress = "xz",
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> cart_bag_spec <- 
+   bag_tree() %>%
+   set_engine("rpart", times = 50) %>% 
+   set_mode("classification")
> 
> cart_bag_workflow <- 
+   workflow() %>% 
+   add_recipe(bland_recipe) %>% 
+   add_model(cart_bag_spec) 
> 
> set.seed(9624)
> cart_bag_res <-
+   fit_resamples(
+     cart_bag_workflow,
+     resamples = hpc_rs,
+     control = ctrl_grid
+   ) 
> 
> save(
+   cart_bag_res,
+   file = file.path("example_analyses", "hpc_cart_bag.RData"),
+   compress = "xz",
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> fda_recipe <- 
+   recipe(formula = class ~ ., data = hpc_data) %>%
+   step_log(compounds, input_fields) %>% 
+   step_log(num_pending, offset = 1)
> 
> fda_spec <- 
+   discrim_flexible(num_terms = tune(), prod_degree = tune(), prune_method = "none")
> 
> fda_workflow <- 
+   workflow() %>% 
+   add_recipe(fda_recipe) %>% 
+   add_model(fda_spec) 
> 
> fda_grid <- crossing(prod_degree = 1:2, num_terms = 2:40)
> 
> set.seed(9624)
> fda_res <-
+   tune_grid(
+     fda_workflow,
+     resamples = hpc_rs,
+     grid = fda_grid,
+     control = ctrl_grid
+   ) 
> 
> save(
+   fda_res,
+   file = file.path("example_analyses", "hpc_fda.RData"),
+   compress = "xz",
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> nnet_spec <-
+   mlp(
+     hidden_units = tune(),
+     penalty = tune(),
+     epochs = tune()
+   ) %>%
+   set_engine("nnet", MaxNWts = 5000) %>%
+   set_mode("classification")
> 
> nnet_workflow <-
+   workflow() %>%
+   add_recipe(norm_recipe) %>%
+   add_model(nnet_spec)
> 
> nnet_param <-
+   nnet_workflow %>%
+   extract_parameter_set_dials() %>%
+   update(
+     hidden_units = hidden_units(c(2, 75))
+   )
> 
> set.seed(9624)
> nnet_res <-
+   tune_grid(
+     nnet_workflow,
+     resamples = hpc_rs,
+     grid = 25,
+     param_info = nnet_param,
+     control = ctrl_grid
+   )
> 
> save(
+   nnet_res,
+   file = file.path("example_analyses", "hpc_nnet.RData"),
+   compress = "xz",
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> svmp_spec <- 
+   svm_poly(cost = tune(), degree = tune(), scale_factor = tune()) %>% 
+   set_mode("classification") 
> 
> svmp_workflow <- 
+   workflow() %>% 
+   add_recipe(norm_recipe) %>% 
+   add_model(svmp_spec) 
> 
> svmp_param <- 
+   svmp_workflow %>% 
+   extract_parameter_set_dials() 
> 
> set.seed(9624)
> svmp_res <-
+   tune_grid(
+     svmp_workflow,
+     resamples = hpc_rs,
+     grid = 25,
+     param_info = svmp_param,
+     control = ctrl_grid
+   ) 
> 
> save(
+   svmp_res,
+   file = file.path("example_analyses", "hpc_svm.RData"),
+   compress = "xz",
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> xgb_recipe <- 
+   recipe(formula = class ~ ., data = hpc_data) %>% 
+   step_dummy(all_nominal_predictors(), one_hot = TRUE) %>% 
+   step_zv(all_predictors()) 
> 
> xgb_spec <- 
+   boost_tree(trees = tune(), min_n = tune(), tree_depth = tune(), learn_rate = tune(), 
+              loss_reduction = tune(), sample_size = tune()) %>% 
+   set_mode("classification") %>% 
+   set_engine("xgboost") 
> 
> xgb_workflow <- 
+   workflow() %>% 
+   add_recipe(xgb_recipe) %>% 
+   add_model(xgb_spec) 
> 
> set.seed(9624)
> xgb_res <-
+   tune_grid(
+     xgb_workflow,
+     resamples = hpc_rs,
+     grid = 25,
+     control = ctrl_grid
+   ) 
> 
> save(
+   xgb_res,
+   file = file.path("example_analyses", "hpc_xgb.RData"),
+   compress = "xz",
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> save(
+   list = ls(pattern = "(_train$)|(_test$)"),
+   file = file.path("example_analyses", "hpc_res.RData"), 
+   compress = "xz", 
+   compression_level = 9
+ )
> 
> # ------------------------------------------------------------------------------
> 
> sessioninfo::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.0 (2022-04-22)
 os       macOS Big Sur/Monterey 10.16
 system   x86_64, darwin17.0
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       America/New_York
 date     2022-09-27
 pandoc   2.17.1.1 @ /usr/local/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────
 package       * version    date (UTC) lib source
 assertthat      0.2.1      2019-03-21 [1] CRAN (R 4.2.0)
 backports       1.4.1      2021-12-13 [1] CRAN (R 4.2.0)
 baguette      * 1.0.0      2022-06-17 [1] CRAN (R 4.2.0)
 bonsai        * 0.2.0.9000 2022-09-21 [1] Github (tidymodels/bonsai@035a0af)
 broom         * 1.0.0      2022-07-01 [1] CRAN (R 4.2.0)
 C50             0.1.6      2022-02-05 [1] CRAN (R 4.2.0)
 cachem          1.0.6      2021-08-19 [1] CRAN (R 4.2.0)
 class         * 7.3-20     2022-01-13 [1] CRAN (R 4.2.0)
 cli             3.4.1      2022-09-23 [1] CRAN (R 4.2.0)
 codetools       0.2-18     2020-11-04 [1] CRAN (R 4.2.0)
 colorspace      2.0-3      2022-02-21 [1] CRAN (R 4.2.0)
 conflicted      1.1.0      2021-11-26 [1] CRAN (R 4.2.0)
 crayon          1.5.1      2022-03-26 [1] CRAN (R 4.2.0)
 Cubist          0.4.0      2022-02-05 [1] CRAN (R 4.2.0)
 data.table      1.14.2     2021-09-27 [1] CRAN (R 4.2.0)
 DBI             1.1.2      2021-12-20 [1] CRAN (R 4.2.0)
 dials         * 1.0.0      2022-06-14 [1] CRAN (R 4.2.0)
 DiceDesign      1.9        2021-02-13 [1] CRAN (R 4.2.0)
 digest          0.6.29     2021-12-01 [1] CRAN (R 4.2.0)
 discrim       * 1.0.0.9000 2022-08-16 [1] Github (tidymodels/discrim@6060ce1)
 doMC          * 1.3.8      2022-02-05 [1] CRAN (R 4.2.0)
 dplyr         * 1.0.10     2022-09-01 [1] CRAN (R 4.2.0)
 earth         * 5.3.1      2021-07-20 [1] CRAN (R 4.2.0)
 ellipsis        0.3.2      2021-04-29 [1] CRAN (R 4.2.0)
 fansi           1.0.3      2022-03-24 [1] CRAN (R 4.2.0)
 fastmap         1.1.0      2021-01-25 [1] CRAN (R 4.2.0)
 foreach       * 1.5.2      2022-02-02 [1] CRAN (R 4.2.0)
 Formula       * 1.2-4      2020-10-16 [1] CRAN (R 4.2.0)
 furrr           0.3.1      2022-08-15 [1] CRAN (R 4.2.0)
 future          1.28.0     2022-09-02 [1] CRAN (R 4.2.0)
 future.apply    1.9.1      2022-09-07 [1] CRAN (R 4.2.0)
 generics        0.1.3      2022-07-05 [1] CRAN (R 4.2.0)
 ggplot2       * 3.3.6      2022-05-03 [1] CRAN (R 4.2.0)
 glmnet        * 4.1-4      2022-04-15 [1] CRAN (R 4.2.0)
 globals         0.16.1     2022-08-28 [1] CRAN (R 4.2.0)
 glue            1.6.2      2022-02-24 [1] CRAN (R 4.2.0)
 gower           1.0.0      2022-02-03 [1] CRAN (R 4.2.0)
 GPfit           1.0-8      2019-02-08 [1] CRAN (R 4.2.0)
 gtable          0.3.1      2022-09-01 [1] CRAN (R 4.2.0)
 hardhat         1.2.0      2022-06-30 [1] CRAN (R 4.2.0)
 infer         * 1.0.2      2022-06-10 [1] CRAN (R 4.2.0)
 inum            1.0-4      2021-04-12 [1] CRAN (R 4.2.0)
 ipred           0.9-13     2022-06-02 [1] CRAN (R 4.2.0)
 iterators     * 1.0.14     2022-02-05 [1] CRAN (R 4.2.0)
 jsonlite        1.8.0      2022-02-22 [1] CRAN (R 4.2.0)
 kernlab       * 0.9-31     2022-06-09 [1] CRAN (R 4.2.0)
 lattice         0.20-45    2021-09-22 [1] CRAN (R 4.2.0)
 lava            1.6.10     2021-09-02 [1] CRAN (R 4.2.0)
 lhs             1.1.5      2022-03-22 [1] CRAN (R 4.2.0)
 libcoin         1.0-9      2021-09-27 [1] CRAN (R 4.2.0)
 lifecycle       1.0.2      2022-09-09 [1] CRAN (R 4.2.0)
 listenv         0.8.0      2019-12-05 [1] CRAN (R 4.2.0)
 lubridate       1.8.0      2022-06-24 [1] Github (tidyverse/lubridate@c8db951)
 magrittr        2.0.3      2022-03-30 [1] CRAN (R 4.2.0)
 MASS            7.3-58.1   2022-08-03 [1] CRAN (R 4.2.0)
 Matrix        * 1.4-1      2022-03-23 [1] CRAN (R 4.2.0)
 mda           * 0.5-3      2022-05-05 [1] CRAN (R 4.2.0)
 memoise         2.0.1      2021-11-26 [1] CRAN (R 4.2.0)
 modeldata     * 1.0.0      2022-07-01 [1] CRAN (R 4.2.0)
 munsell         0.5.0      2018-06-12 [1] CRAN (R 4.2.0)
 mvtnorm         1.1-3      2021-10-08 [1] CRAN (R 4.2.0)
 nnet          * 7.3-17     2022-01-13 [1] CRAN (R 4.2.0)
 parallelly    * 1.32.1     2022-07-21 [1] CRAN (R 4.2.0)
 parsnip       * 1.0.1      2022-08-18 [1] CRAN (R 4.2.0)
 partykit        1.2-16     2022-06-20 [1] CRAN (R 4.2.0)
 pillar          1.7.0      2022-06-24 [1] Github (r-lib/pillar@c914502)
 pkgconfig       2.0.3      2019-09-22 [1] CRAN (R 4.2.0)
 plotmo        * 3.6.2      2022-05-21 [1] CRAN (R 4.2.0)
 plotrix       * 3.8-2      2021-09-08 [1] CRAN (R 4.2.0)
 plyr            1.8.7      2022-03-24 [1] CRAN (R 4.2.0)
 prodlim         2019.11.13 2019-11-17 [1] CRAN (R 4.2.0)
 purrr         * 0.3.4      2020-04-17 [1] CRAN (R 4.2.0)
 R6              2.5.1      2021-08-19 [1] CRAN (R 4.2.0)
 Rcpp            1.0.9      2022-07-08 [1] CRAN (R 4.2.0)
 recipes       * 1.0.1      2022-07-07 [1] CRAN (R 4.2.0)
 reshape2        1.4.4      2020-04-09 [1] CRAN (R 4.2.0)
 rlang           1.0.6      2022-09-24 [1] CRAN (R 4.2.0)
 rpart         * 4.1.16     2022-01-24 [1] CRAN (R 4.2.0)
 rsample       * 1.1.0      2022-08-08 [1] CRAN (R 4.2.0)
 rstudioapi      0.13       2020-11-12 [1] CRAN (R 4.2.0)
 scales        * 1.2.1      2022-08-20 [1] CRAN (R 4.2.0)
 sessioninfo     1.2.2      2021-12-06 [1] CRAN (R 4.2.0)
 shape           1.4.6      2021-05-19 [1] CRAN (R 4.2.0)
 stringi         1.7.8      2022-07-11 [1] CRAN (R 4.2.0)
 stringr         1.4.1      2022-08-20 [1] CRAN (R 4.2.0)
 survival        3.4-0      2022-08-09 [1] CRAN (R 4.2.0)
 TeachingDemos * 2.12       2020-04-07 [1] CRAN (R 4.2.0)
 tibble        * 3.1.8      2022-07-22 [1] CRAN (R 4.2.0)
 tidymodels    * 1.0.0      2022-07-13 [1] CRAN (R 4.2.0)
 tidyr         * 1.2.1      2022-09-08 [1] CRAN (R 4.2.0)
 tidyselect      1.1.2      2022-02-21 [1] CRAN (R 4.2.0)
 timeDate        4021.104   2022-07-19 [1] CRAN (R 4.2.0)
 tune          * 1.0.0      2022-07-07 [1] CRAN (R 4.2.0)
 utf8            1.2.2      2021-07-24 [1] CRAN (R 4.2.0)
 vctrs           0.4.1      2022-04-13 [1] CRAN (R 4.2.0)
 withr           2.5.0      2022-03-03 [1] CRAN (R 4.2.0)
 workflows     * 1.0.0      2022-07-05 [1] CRAN (R 4.2.0)
 workflowsets  * 1.0.0      2022-07-12 [1] CRAN (R 4.2.0)
 xgboost       * 1.6.0.1    2022-04-16 [1] CRAN (R 4.2.0)
 yardstick     * 1.1.0      2022-09-07 [1] CRAN (R 4.2.0)

 [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library

──────────────────────────────────────────────────────────────────────────────
> 
> q(save = "no")
> proc.time()
     user    system   elapsed 
27653.761   191.799  1482.991 
